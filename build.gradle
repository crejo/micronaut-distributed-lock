plugins {
    id "com.diffplug.eclipse.apt" version "3.22.0"
    id "groovy"
    id "com.jfrog.bintray" version "1.8.5"
    id 'maven-publish'
}

subprojects {
    apply plugin: "com.diffplug.eclipse.apt"
    apply plugin: "groovy"
    apply plugin: "com.jfrog.bintray"
    apply plugin: "maven-publish"

    repositories {
        mavenCentral()
        jcenter()
    }

    group "com.uberall"
    version libVersion

    dependencies {
        annotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
        annotationProcessor("io.micronaut:micronaut-inject-java")
        implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
        implementation("io.micronaut:micronaut-inject")
        implementation("io.micronaut:micronaut-runtime")
        runtimeOnly("ch.qos.logback:logback-classic")
        testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
        testImplementation("io.micronaut:micronaut-inject-groovy")
        testImplementation("org.spockframework:spock-core") {
            exclude group: "org.codehaus.groovy", module: "groovy-all"
        }
        testImplementation("io.micronaut.test:micronaut-test-spock")
    }

    // use JUnit 5 platform
    test {
        useJUnitPlatform()
    }

    java {
        sourceCompatibility = JavaVersion.toVersion('1.8')
        targetCompatibility = JavaVersion.toVersion('1.8')
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.compilerArgs.addAll([
                '-parameters',
                // enables incremental compilation
                '-Amicronaut.processing.incremental=true',
                '-Amicronaut.processing.annotations=com.uberall.*',
                "-Amicronaut.processing.group=$project.group",
                "-Amicronaut.processing.module=$project.name",
        ])
    }

    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        publications = ['Publication']
        pkg {
            repo = 'micronaut'
            name = "${rootProject.name}-${project.name}"
            userOrg = 'uberall'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/uberall/micronaut-distributed-lock'
            issueTrackerUrl = 'https://github.com/uberall/micronaut-distributed-lock/issues'
            githubRepo = 'uberall/micronaut-distributed-lock'
            publicDownloadNumbers = true
        }
    }

    publishing {
        publications {
            Publication(MavenPublication) {
                artifactId "${rootProject.name}-${project.name}"
                from components.java
            }
        }
    }
}
